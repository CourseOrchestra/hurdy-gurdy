---

---
/com
---
/com/example
---
/com/example/controller
---
/com/example/controller/Controller.kt
package com.example.controller

import com.example.dto.ToveDTO
import jakarta.servlet.http.HttpServletResponse
import kotlin.Int
import org.springframework.web.bind.`annotation`.GetMapping
import org.springframework.web.bind.`annotation`.PathVariable
import org.springframework.web.bind.`annotation`.PutMapping
import org.springframework.web.bind.`annotation`.RequestBody

public interface Controller {
  @GetMapping(
    value = ["/api/v1/tove/{id}"],
    produces = ["application/json"],
  )
  public fun getTove(@PathVariable(name = "id") id: Int?, response: HttpServletResponse): ToveDTO?

  @PutMapping(
    value = ["/api/v1/tove/{id}"],
    produces = ["application/json"],
  )
  public fun updateTove(
    @RequestBody request: ToveDTO?,
    @PathVariable(name = "id") id: Int?,
    response: HttpServletResponse,
  ): ToveDTO?
}
---
/com/example/dto
---
/com/example/dto/ToveDTO.kt
package com.example.dto

import com.fasterxml.jackson.databind.PropertyNamingStrategies
import com.fasterxml.jackson.databind.`annotation`.JsonNaming
import kotlin.String

@JsonNaming(value = PropertyNamingStrategies.SnakeCaseStrategy::class)
public data class ToveDTO(
  public val name: String? = null,
)
