---

---
/com
---
/com/example
---
/com/example/controller
---
/com/example/controller/Controller.kt
package com.example.controller

import jakarta.servlet.http.HttpServletResponse
import kotlin.String
import org.springframework.web.bind.`annotation`.GetMapping

public interface Controller {
  @GetMapping(
    value = ["/api/v1/hello"],
    produces = ["*/*"],
  )
  public fun hello(response: HttpServletResponse): String?
}
---
/com/example/dto
---
/com/example/dto/BooleanCategories.kt
package com.example.dto

import com.fasterxml.jackson.databind.PropertyNamingStrategies
import com.fasterxml.jackson.databind.`annotation`.JsonNaming
import kotlin.String

@JsonNaming(value = PropertyNamingStrategies.SnakeCaseStrategy::class)
public data class BooleanCategories(
  public val truckProperty: String? = null,
) : Categories()
---
/com/example/dto/Categories.kt
package com.example.dto

import com.fasterxml.jackson.`annotation`.JsonSubTypes
import com.fasterxml.jackson.`annotation`.JsonTypeInfo
import com.fasterxml.jackson.databind.PropertyNamingStrategies
import com.fasterxml.jackson.databind.`annotation`.JsonNaming

@JsonNaming(value = PropertyNamingStrategies.SnakeCaseStrategy::class)
@JsonTypeInfo(
  use = JsonTypeInfo.Id.NAME,
  include = JsonTypeInfo.As.PROPERTY,
  property = "type",
)
@JsonSubTypes(
  JsonSubTypes.Type(value = StringCategories::class, name = "string"),
  JsonSubTypes.Type(value = BooleanCategories::class, name = "boolean"),
)
public sealed class Categories()
---
/com/example/dto/StringCategories.kt
package com.example.dto

import com.fasterxml.jackson.databind.PropertyNamingStrategies
import com.fasterxml.jackson.databind.`annotation`.JsonNaming
import kotlin.String

@JsonNaming(value = PropertyNamingStrategies.SnakeCaseStrategy::class)
public data class StringCategories(
  public val carProperty: String? = null,
) : Categories()
