---

---
/com
---
/com/example
---
/com/example/controller
---
/com/example/controller/Controller.kt
package com.example.controller

import javax.servlet.http.HttpServletResponse
import kotlin.String
import org.springframework.web.bind.`annotation`.GetMapping

public interface Controller {
  @GetMapping(
    value = ["/api/v1/hello"],
    produces = ["*/*"],
  )
  public fun hello(response: HttpServletResponse): String?
}
---
/com/example/dto
---
/com/example/dto/OneOf.kt
package com.example.dto

import com.fasterxml.jackson.`annotation`.JsonSubTypes
import com.fasterxml.jackson.`annotation`.JsonTypeInfo
import com.fasterxml.jackson.databind.PropertyNamingStrategies
import com.fasterxml.jackson.databind.`annotation`.JsonNaming

@JsonSubTypes(
  JsonSubTypes.Type(Variant1::class),
  JsonSubTypes.Type(Variant2::class),
)
@JsonTypeInfo(use = JsonTypeInfo.Id.DEDUCTION)
@JsonNaming(value = PropertyNamingStrategies.SnakeCaseStrategy::class)
public interface OneOf
---
/com/example/dto/Variant1.kt
package com.example.dto

import com.fasterxml.jackson.databind.PropertyNamingStrategies
import com.fasterxml.jackson.databind.`annotation`.JsonNaming
import kotlin.Long

@JsonNaming(value = PropertyNamingStrategies.SnakeCaseStrategy::class)
public data class Variant1(
  public val id1: Long,
) : OneOf
---
/com/example/dto/Variant2.kt
package com.example.dto

import com.fasterxml.jackson.databind.PropertyNamingStrategies
import com.fasterxml.jackson.databind.`annotation`.JsonNaming
import kotlin.Long

@JsonNaming(value = PropertyNamingStrategies.SnakeCaseStrategy::class)
public data class Variant2(
  public val id2: Long,
) : OneOf
