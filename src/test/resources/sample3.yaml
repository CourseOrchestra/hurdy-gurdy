openapi: 3.0.1
info:
  title: "Testing suite UI API"
  description: |
    Test
  version: "0.1"
paths:
  /api/v1/admin/user:
    get:
      operationId: list
      tags:
        - admin
      responses:
        "200":
          description: get list of users
          content:
            application/json:
              schema:
                type: array
                nullable: false
                items:
                  $ref: '#/components/schemas/UserResponse'
    post:
      operationId: create
      tags:
        - admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUpdateUserRequest"
      responses:
        "201":
          description: create user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

  /api/v1/admin/user/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          nullable: false
    put:
      operationId: update
      tags:
        - admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUpdateUserRequest"
      responses:
        "202":
          description: update user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    delete:
      operationId: delete
      tags:
        - admin
      responses:
        "200":
          description: delete user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    get:
      operationId: get
      tags:
        - admin
      responses:
        "200":
          description: get user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

components:
  schemas:
    UserRole:
      nullable: false
      default: NONE
      enum:
        - NONE
        - USER
        - OPERATOR
        - ADMINISTRATOR
        - OWNER

    UserResponse:
      type: object
      nullable: false
      properties:
        id:
          type: integer
          format: int64
          nullable: false
        email:
          type: string
          nullable: false
        fullname:
          type: string
          nullable: false
          default: ""
        organization:
          type: string
          nullable: false
          default: ""
        role:
          $ref: '#/components/schemas/UserRole'
        enabled:
          type: boolean
          default: true
          nullable: false

    CreateUpdateUserRequest:
      type: object
      nullable: false
      properties:
        email:
          type: string
          nullable: false
        password:
          type: string
          nullable: true
        role:
          $ref: '#/components/schemas/UserRole'
        fullname:
          type: string
          nullable: false
          default: ""
        organization:
          type: string
          nullable: false
          default: ""
        enabled:
          type: boolean
          default: true
          nullable: false

    DatabaseType:
      description: Database type
      nullable: false
      default: NONE
      enum:
        - NONE
        - POSTGRES
        - MYSQL
        - MARIADB
        - SQLITE
        - ORACLE
        - MSSQL

    DatabaseConnectionAuthType:
      description: Type of authentication
      nullable: false
      default: CREDENTIALS
      enum:
        - CREDENTIALS
        - NO_AUTH

    DatabaseConnectionAccessLevel:
      description: Connection access level
      nullable: false
      default: PRIVATE
      enum:
        - PRIVATE
        - READ_ONLY
        - READ_AND_WRITE

    DatabaseConnectionRequest:
      type: object
      nullable: false
      properties:
        type:
          $ref: '#/components/schemas/DatabaseType'
        host:
          description: Database host url
          type: string
          default: null
        port:
          description: Database port like 5432
          type: integer
          default: null
        user_name:
          description: Database user name
          type: string
          default: null
        password:
          description: Database password
          type: string
          default: null
        name:
          description: Connection name
          example: My Connection
          type: string
          nullable: false
        jdbc_url:
          description: JDBC URL
          example: jdbc:postgresql://127.0.0.1:5432/postgres
          type: string
          nullable: false
        auth_type:
          $ref: '#/components/schemas/DatabaseConnectionAuthType'
        access_level:
          $ref: '#/components/schemas/DatabaseConnectionAccessLevel'
